<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document [
  <!ENTITY project SYSTEM "project.xml">
]>
<document url="security-howto.html">

    &project;

  <properties>
    <title>Security Considerations</title>
  </properties>

<body>

<section name="Table of Contents">
<toc/>
</section>

  <section name="Introduction">
    <p>
    톰캣은 기본적으로 대부분의 사용 사례에 대해 합리적으로 안전한 것으로 구성되어 있습니다. 
    일부 환경은 더 또는 더 적은, 보안 구성이 필요할 수 있습니다. 이 페이지는 보안에 영향을 미칠 수 있으며,
    이러한 옵션을 변경의 예상 영향에 대한 몇 가지 논평을 제공하는 
    구성 옵션에 대한 참조의 단일 지점을 제공하는 것입니다.
    의도는 톰캣 설치의 보안을 평가할 때 고려해야 할 구성 옵션 목록을 제공하는 것입니다.</p>

    <p><strong>Note</strong>: 이 페이지를 읽는 것은 독서와 자세한 구성 설명서를 이해하기위한 대체하지 않습니다. 
    이러한 특성 풀러 설명은 관련 문서 페이지에서 찾을 수 있습니다.</p>
  </section>

  <section name="Non-Tomcat settings">
    <p>Tomcat 구성 방어의 유일한 라인해서는 안됩니다.시스템의 다른 구성 요소 
    (운영 체제, 네트워크, 데이터베이스 등)도 보호해야합니다</p>
    <p>바람둥이는 루트 사용자로 실행할 수 없습니다.톰캣 프로세스를위한 전용 사용자를 생성하고 
    운영 체제에 필요한 최소한의 권한으로 해당 사용자를 제공합니다.
    예를 들어, 원격으로 톰캣 사용자를 사용하여 로그온 할 수 없을 것이다.</p>
    <p>파일 사용 권한도 제한 적합해야합니다.예 (자동 배포가 비활성화되고 웹 응용 프로그램은 
    폭발 디렉토리로 배포되는)와 같은 ASF에서 톰캣 인스턴스를 가지고, 표준 구성 그룹 톰캣 동안 소유자와 루트가 
    소유 한 모든 톰캣 파일이 읽기가 / priviliges를 작성하는 것입니다 , 그룹은 읽기와 세상은 아무 권한이 없습니다.
    예외가 아닌 루트가 아닌 톰캣 사용자가 소유하는 로그, 임시 및 작업 디렉토리입니다.
    이것은 공격자가 톰캣 프로세스를 타협하더라도, 그들은 기존 웹 응용 프로그램을 Tomcat이 
    설정을 변경 새로운 웹 응용 프로그램을 배포하거나 수정할 수 없음을 의미합니다.
    톰캣 프로세스가 이러한 권한을 유지하기 위해 007의 umask를 함께 실행합니다.</p>
    <p>네트워크 수준에서, 당신이 존재하는 것으로 예상 만 연결 들어오는 
    연결과 나가는 연결을 모두 제한하는 방화벽을 사용하는 것이 좋습니다.</p>
  </section>

  <section name="Default web applications">
    <p>기본적으로 웹 응용 프로그램의 번호와 배송 바람둥이. 취약점은 과거에 이러한 응용 프로그램에서 발견되었다. 
    또 다른 취약점이 발견 될 경우 시스템이 위험에 노출되지 않도록 필요하지 않은 응용 프로그램을 제거해야합니다..</p>
  </section>

  <section name="Security manager">
    <p>보안 관리자를 활성화하면 상당히 같은 System.exit와 ()를 호출 네트워크 연결을 설정하거나 웹 응용 프로그램의 
    루트 및 임시 디렉터리 외부의 파일 시스템에 액세스하는 등의 악의적 인 작업을 수행 할 웹 응용 프로그램의 
    능력을 제한하는 웹 응용 프로그램 샌드 박스에서 실행되도록 . 그러나, 이러한 보안 관리자를 방지 할 수있는, 
    무한 루프를 통해 높은 CPU 소비를 트리거링 같은 악의적 인 동작이 있다는 것을 주목해야한다.</p>

    <p>보안 관리자는 일반적으로 잠재적 인 영향을 제한하기 위해 수행됩니다 사용하면, 공격자는 신뢰할 수있는
    웹 응용 프로그램을 손상 할 수있는 방법을 찾아야한다. 보안 관리자가 신뢰할 수없는 웹 응용 프로그램 
    (호스팅 환경에서 예) 실행의 위험을 줄이기 위해 사용할 수 있지만 보안 관리자는 신뢰할 수없는 
    웹 응용 프로그램을 실행하는 위험을 감소 시킨다는 것을 주목해야한다, 
    그것은 그들을 제거하지 않습니다. 여러 개의 신뢰할 수없는 웹 응용 프로그램을 실행하는 경우, 
    각 웹 응용 프로그램이 다른 응용 프로그램의 가용성에 영향을 미치는 악의적 인 웹 응용 프로그램의 능력을 
    줄이기 위해 별도의 톰캣 인스턴스 (이상적으로 분리 된 호스트)에 배치하는 것이 좋습니다.</p>

    <p>Tomcat이 보안 관리자를 사용하여 테스트하지만, Tomcat 사용자의 대부분은 보안 관리자는 실행되지 않으므로
    Tomcat이 구성에서 잘 사용자 테스트​​로하지 않습니다. 이 있었고, 계속되고있는 버그는 보안 관리자에서 
    실행함으로써 발생하는 것을보고했다..</p>

    <p>보안 관리자가 활성화 된 경우 보안 관리자에 의해 부과 된 제한은 대부분의 응용 프로그램을 깰 가능성이 있습니다.
    보안 관리자는 광범위한 테스트를하지 않고 사용하지 않아야합니다. 
    그것은 아래로 추적하고 성숙 응용 프로그램에 대한 보안 관리자를 사용하여 발생하는 문제를 해결하기 위해 많은 
    시간이 소요될 수 있습니다 이상적으로, 보안 매니저의 사용은 개발주기의 시작에 소개해야한다.</p>
  </section>

  <section name="server.xml">
    <subsection name="General">
      <p>기본 server.xml 주석 몇 가지 예를 들어 구성 요소 정의와 주석의 큰 숫자를 포함합니다. 
      이러한 주석을 제거하면 상당히 쉽게 server.xml 파일을 읽고 이해 할 수 있습니다.</p>
      <p>구성 요소 유형이 목록에없는 경우 해당 유형 직접적으로 영향을 미치는 보안에 대한 설정이 없습니다.</p>
    </subsection>

    <subsection name="Server">
      <p>설정 <strong>포트</strong>속성에 <code>-1</code> 종료 포트를 비활성화합니다.</p>
      <p>종료 포트가 비활성화되지 않은 경우, 강력한 암호가 구성되야한다 <strong>shutdown</strong>.</p>
    </subsection>

    <subsection name="Listeners">
      <p>GCC를 사용하여 Solaris에서 컴파일하면 APR이 라이프 사이클 리스너가 안정되지 않습니다. Solaris에서 APR에 / 
      기본 커넥터를 사용하는 경우, 썬 스튜디오 컴파일러로 컴파일합니다.</p>

      <p>보안 리스너가 적절하게 설정하고 구성해야한다.
      </p>
    </subsection>

    <subsection name="Connectors">
      <p>기본적으로 HTTP와 AJP 커넥터가 구성됩니다. 사용하지 않는 커넥터가 server.xml 파일에서 제거해야합니다.</p>

      <p>The <strong>주소</strong> 속성은 커넥터가 연결을 수신 대기하는 IP 주소를 제어하는 데 사용할 수 있습니다. 
      기본적으로, 커넥터는 구성된 모든 IP 주소에서 수신 대기합니다.</p>

      <p>The <strong>allowTrace</strong> 속성은 디버깅에 유용 할 수 있습니다 TRACE 요청을 활성화하는 데 
      사용할 수 있습니다. 일부 브라우저에서는 TRACE 요청 (XSS 공격은 브라우저를 노출하는), 
      TRACE 요청에 대한 지원의 응답을 처리하는 방식으로 인해 기본적으로 비활성화되어 있습니다.</p>

      <p>The <strong>maxPostSize</strong>속성은 매개 변수에 대한 구문 분석되는 POST 요청의 최대 크기를 제어합니다. 
      이 DOS 공격에 대한 노출을 줄이기 위해 기본적으로는 2MB 제한되어 있으므로 
      매개 변수는 요청의 기간 동안 캐시됩니다..</p>

      <p>The <strong>maxSavePostSize</strong> 속성은 FORM 및 클라이언트 CERT 인증 과정에서 POST 요청의 저장을 
      제어합니다. 이것은 DOS 공격에 대한 노출을 줄이기 위해 기본적으로 4킬로바이트로 제한되도록 매개 변수는 인증 
      (많은 분 일 수 있음)의 기간 동안 캐시됩니다.</p>

      <p>The <strong>maxParameterCount</strong> 속성을 구문 분석하고 요청에 저장할 수있는 매개 변수와 값 쌍의 
      최대 수 (GET 플러스 POST)을 제어합니다. 과도한 매개 변수는 무시됩니다. 당신이 그런 요청을 거부 할 경우
      <a href="config/filter.html">FailedRequestFilter</a>.</p>

      <p>The <strong>xpoweredBy</strong> 속성 컨트롤이 있는지 여부를 X-Powered-By에 HTTP 헤더 각 요청과 함께 
      전송됩니다. 보낸 경우, 헤더의 값은 서블릿과 JSP 스펙 버전, 전체 톰캣 버전 
      (예 : 아파치 Tomcat/7.0.0), JVM 공급 업체의 이름과 JVM의 버전이 포함되어 있습니다. 
      이 헤더는 기본적으로 비활성화되어 있습니다. 이 헤더는 합법적 인 클라이언트와 공격자 모두에게 
      유용한 정보를 제공 할 수 있습니다.
      </p>

      <p>The <strong>server</strong>속성은 서버에서 HTTP 헤더의 값을 제어합니다. 
      톰캣 4.1.x를, 5.0.x의이 헤더의 기본 값은 ​​5.5.x 전 6.0.x 및 7.0.x가 Apache-Coyote/1.1입니다.
      이 헤더는 합법적 인 클라이언트와 공격자 모두 제한된 정보를 제공 할 수 있습니다.</p>

      <p>The <strong>SSLEnabled</strong>, <strong>계획</strong> 그리고
      <strong>보안</strong> 
      속성은 모두 독립적으로 설정할 수 있습니다. 톰캣은 역방향 프록시 뒤에 위치하고 있으며 프록시가
      HTTP 또는 HTTPS를 통해 톰캣에 연결하는 경우 다음은 일반적으로 사용됩니다. 그들은 클라이언트와 
      오히려 프록시와 톰캣보다 프록시 사이의 연결의 SSL 특성을 볼 톰캣 수 있습니다. 
      예를 들어, 클라이언트가 HTTPS를 통해 프록시에 연결할 수 있지만 프록시는 HTTP를 사용하여 Tomcat에 연결합니다. 
      톰캣 프록시가 수신 보안 및 비보안 연결을 구별 할 수 있어야하는 것이 필요한 경우 프록시는 Tomcat에게
      보안 및 비보안 요청을 전달하기 위해 별도의 커넥터를 사용합니다.프록시 다음 AJP를 사용하는 경우 
      클라이언트 연결의 SSL 속성은 AJP 프로토콜과 별도의 커넥터가 필요하지 않습니다를 통해 전달됩니다.
      </p>

      <p>The <strong>ciphers</strong> 특성은 SSL 연결에 사용되는 암호를 제어합니다. 
      기본적으로 JVM의 기본 암호가 사용됩니다. 이것은 일반적으로 약한 수출 급 암호가 가능한 암호 목록에 
      포함된다는 것을 의미합니다. 보안 환경은 일반적으로 암호의 더 제한된 집합을 구성 할 것입니다.</p>

      <p>The <strong>tomcatAuthentication</strong> 속성은 인증 후 AJP 프로토콜의 일부로서 Tomcat에게 
      인증 된 사용자 이름을 전달합니다 역방향 프록시에 위임 할 수있는 경우 Tomcat이 사용자를 인증하거나 
      여부를 결정하는 AJP 커넥터가 사용됩니다.</p>

      <p>The <strong>allowUnsafeLegacyRenegotiation</strong> 속성은 CVE-2009-3555 해결 방법을 제공합니다
      <a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3555">
     </a>,중앙 공격 TLS 남자. 이 해결 방법은 BIO 커넥터에 적용됩니다.기본 SSL 구현 CVE-2009-3555에 
     취약한 경우에만 필요합니다. 더이 취약점의 현재 상태에 대한 정보 및 작업 차선책을 사용할 
     톰캣 7의 보안 페이지를 참조하십시오
      <a href="http://tomcat.apache.org/security-7.html"></a>.</p>

      <p>The <strong>requiredSecret</strong>AJP 커넥터의 속성은 톰캣 톰캣 앞에 역방향 프록시 사이의 
      공유 비밀 키를 구성합니다. 그것은 AJP 프로토콜을 통해 인증되지 않은 연결을 방지하는 데 사용됩니다</p>
    </subsection>

    <subsection name="Host">
      <p>호스트 요소 배치를 제어합니다. 자동 배포는 간단하게 관리 할 수 있습니다뿐만 아니라, 
      악의적 인 응용 프로그램을 배포하는 공격자가 쉬워집니다.  자동 배포는 자동배포에 의해 제어됩니다
      <strong>자동배포</strong> 그리고 <strong>배포를 시작합니다</strong>
      attributes. 모두 <code>false</code>, 인경우 server.xml에 정의 된 유일한 컨텍스트는 배포 할 
      어떤 변화가 Tomcat을 다시 시작해야합니다
      </p>

      <p>호스팅 된 환경에서 웹 응용 프로그램은 신뢰되지 않을 수 있습니다,설정 
      <strong>deployXml</strong>어느 context.xml Web 응용 프로그램에 증가 권한을 할당하려고 할지도 모른다, 
      Web 응용 프로그램과 함께 패키지를 무시하도록 false로 속성을정해야한다. </p>
    </subsection>

    <subsection name="Context">
      <p>이런 적용대상은 <a href="config/context.html">문맥</a>이
     정의 할 수있는 모든 장소의 요소:
      <code>server.xml</code> file,
      default <code>context.xml</code> file,
      per-host <code>context.xml.default</code> file,
      호스트 구성 디렉토리 또는 웹 응용 프로그램 내에서 웹 응용 프로그램 컨텍스트 파일입니다.</p>

      <p>The <strong>crossContext</strong> attribute controls if a context is
      allowed to access the resources of another context. It is
      <code>false</code> by default and should only be changed for trusted web
      applications.</p>

      <p>The <strong>privileged</strong> attribute controls if a context is
      allowed to use container provided servlets like the Manager servlet. It is
      <code>false</code> by default and should only be changed for trusted web
      applications.</p>

      <p>The <strong>allowLinking</strong> attribute controls if a context is
      allowed to use linked files. If enabled and the context is undeployed, the
      links will be followed when deleting the context resources. To avoid this
      behaviour, use the <strong>aliases</strong> attribute. Changing this
      setting from the default of <code>false</code> on case insensitive
      operating systems (this includes Windows) will disable a number of
      security measures and allow, among other things, direct access to the
      WEB-INF directory.</p>
    </subsection>

    <subsection name="Valves">
      <p>It is strongly recommended that an AccessLogValve is configured. The
      default Tomcat configuration includes an AccessLogValve. These are
      normally configured per host but may also be configured per engine or per
      context as required.</p>

      <p>Any administrative application should be protected by a
      RemoteAddrValve. (Note that this Valve is also available as a Filter.)
      The <strong>allow</strong> attribute should be used to limit access to a
      set of known trusted hosts.</p>

      <p>The default ErrorReportValve includes the Tomcat version number in the
      response sent to clients. To avoid this, custom error handling can be
      configured within each web application. Alternatively, the version number
      can be changed by creating the file
      CATALINA_BASE/lib/org/apache/catalina/util/ServerInfo.properties with
      content as follows:</p>
      <source>
server.info=Apache Tomcat/7.0.x
      </source>
      <p>Modify the values as required. Note that this will also change the version
      number reported in some of the management tools and may make it harder to
      determine the real version installed. The CATALINA_HOME/bin/version.bat|sh
      script will still report the version number.</p>

      <p>The default ErrorReportValve can display stack traces and/or JSP
      source code to clients when an error occurs. To avoid this, custom error
      handling can be configured within each web application.</p>
    </subsection>

    <subsection name="Realms">
      <p>The MemoryRealm is not intended for production use as any changes to
      tomcat-users.xml require a restart of Tomcat to take effect.</p>

      <p>The JDBCRealm is not recommended for production use as it is single
      threaded for all authentication and authorization options. Use the
      DataSourceRealm instead.</p>

      <p>The UserDatabaseRealm is not intended for large-scale installations. It
      is intended for small-scale, relatively static environments.</p>

      <p>The JAASRealm is not widely used and therefore the code is not as
      mature as the other realms. Additional testing is recommended before using
      this realm.</p>

      <p>By default, the realms do not implement any form of account lock-out.
      This means that brute force attacks can be successful. To prevent a brute
      force attack, the chosen realm should be wrapped in a LockOutRealm.</p>
    </subsection>

    <subsection name="Manager">
      <p>The manager component is used to generate session IDs.</p>

      <p>The default <strong>entropy</strong> value has been shown to generate predictable values
      under certain conditions. For more secure session generation, this should
      be set to a long string. This is done automatically if the APR/native
      library is installed; a random value will be obtained from the APR/native
      library.</p>

      <p>The class used to generate random session IDs may be changed with
      the <strong>randomClass</strong> attribute.</p>

      <p>The length of the session ID may be changed with the
      <strong>sessionIdLength</strong> attribute.</p>
    </subsection>
  </section>

  <section name="System Properties">
    <p>Setting <strong>org.apache.catalina.connector.RECYCLE_FACADES</strong>
    system property to <code>true</code> will cause a new facade object to be
    created for each request. This reduces the chances of a bug in an
    application exposing data from one request to another.</p>

    <p>The <strong>
    org.apache.catalina.connector.CoyoteAdapter.ALLOW_BACKSLASH</strong> and
    <strong>org.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH</strong>
    system properties allow non-standard parsing of the request URI. Using
    these options when behind a reverse proxy may enable an attacker to bypass
    any security constraints enforced by the proxy.</p>

    <p>The <strong>
    org.apache.catalina.connector.Response.ENFORCE_ENCODING_IN_GET_WRITER
    </strong> system property has security implications if disabled. Many user
    agents, in breach of RFC2616, try to guess the character encoding of text
    media types when the specification-mandated default of ISO-8859-1 should be
    used. Some browsers will interpret as UTF-7 a response containing characters
    that are safe for ISO-8859-1 but trigger an XSS vulnerability if interpreted
    as UTF-7.</p>
  </section>

  <section name="web.xml">
    <p>This applies to the default <code>conf/web.xml</code> file and
    <code>WEB-INF/web.xml</code> files in web applications if they define
    the components mentioned here.</p>

    <p>The <a href="default-servlet.html">DefaultServlet</a> is configured
    with <strong>readonly</strong> set to
    <code>true</code>. Changing this to <code>false</code> allows clients to
    delete or modify static resources on the server and to upload new
    resources. This should not normally be changed without requiring
    authentication.</p>

    <p>The DefaultServlet is configured with <strong>listings</strong> set to
    <code>false</code>. This isn't because allowing directory listings is
    considered unsafe but because generating listings of directories with
    thousands of files can consume significant CPU leading to a DOS attack.
    </p>

    <p><a href="config/filter.html">FailedRequestFilter</a>
    can be configured and used to reject requests that had errors during
    request parameter parsing. Without the filter the default behaviour is
    to ignore invalid or excessive parameters.</p>
  </section>

  <section name="General">
    <p>BASIC and FORM authentication pass user names and passwords in clear
    text. Web applications using these authentication mechanisms with clients
    connecting over untrusted networks should use SSL.</p>

    <p>The session cookie for a session with an authenticated user are nearly
    as useful as the user's password to an attacker and in nearly all
    circumstances should be afforded the same level of protection as the
    password itself. This usually means authenticating over SSL and continuing
    to use SSL until the session ends.</p>
  </section>

</body>
</document>
