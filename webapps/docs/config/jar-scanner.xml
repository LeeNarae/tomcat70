<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document [
  <!ENTITY project SYSTEM "project.xml">
]>
<document url="jar-scanner.html">

  &project; // 프로젝트

  <properties>
    <title>The Jar Scanner Component</title> Jar 스캐너 구성요소
  </properties>

<body>

<section name="Table of Contents">
<toc/>
</section>

<section name="Introduction">

  <p>The <strong>Jar Scanner</strong> element represents the component that is
  used to scan the web application for JAR files. It is typically used during
  web application start to identify configuration files such as TLDs or
  web-fragment.xml files that must be processed as part of the web application
  initialisation.</p>

  <p>A Jar Scanner element MAY be nested inside a
  <a href="context.html">Context</a> component.  If it is not included,
  a default Jar Scanner configuration will be created automatically, which
  is sufficient for most requirements.</p>

자자 스캐너 요소는 JAR 파일에 대한 웹 응용 프로그램을 검사하는 데 사용되는 구성 요소를 나타냅니다.
그것은 일반적으로 TLDs 또는 웹 조각과 같은 설정 파일을 식별하는 웹 응용 프로그램 시작시 사용됩니다.
XML 웹 어플 리케이션 초기화의 일부로 처리되어야합니다.

자자 스캐너 요소는 컨텍스트 요소 내부에 중첩되지 않을 수도 있습니다.
그것이 포함되지 않은 경우 기본 자자 스캐너 구성은 대부분의 요구 사항에 대한 
충분한입니다, 자동으로 만들어집니다.
</section>


<section name="Attributes">

  <subsection name="Common Attributes">

    <p>All implementations of <strong>Jar Scanner</strong>
    support the following attributes:</p>

    자자 스캐너의 모든 구현은 다음과 같은 속성을 지원합니다

    <attributes>

      <attribute name="className" required="false">
        <p>Java class name of the implementation to use.  This class must
        implement the <code>org.apache.tomcat.JarScanner</code> interface.
        If not specified, the standard value (defined below) will be used.</p>

		사용하는 구현의 Java 클래스 이름.
        이 클래스는 org.apache.tomcat.JarScanner 인터페이스를 구현해야합니다.
        지정하지 않으면 표준 값 (아래 정의된)가 사용됩니다.

      </attribute>

    </attributes>

  </subsection>


  <subsection name="Standard Implementation">

    <p>The standard implementation of <strong>Jar Scanner</strong> is
    <strong>org.apache.tomcat.util.scan.StandardJarScanner</strong>.
    It supports the following additional attributes (in addition to the
    common attributes listed above):</p>

	자자 스캐너의 표준 구현은 org.apache.tomcat.util.scan.StandardJarScanner입니다.
    그것은 다음과 같은 추가 속성을 (위에 나열된 일반적인 특성 이외에) 지원합니다.
    <attributes>

      <attribute name="scanClassPath" required="false">
       <p>If true, the full web application classpath, including the shared and
       common classloaders will be scanned for Jar files in addition to the
       web application. The default is <code>true</code>.</p>

 	true이면 공유 및 일반 classloaders 포함한 전체 웹 응용 프로그램 클래스 경로는
	웹 응용 프로그램에 추가 JAR 파일에 대해 스캔됩니다.

	기본값은 true입니다.
      </attribute>

      <attribute name="scanAllFiles" required="false">
       <p>If true, any files found on the classpath will be checked to see if
       they are Jar files rather than relying on the file extension being
       <code>.jar</code>. The default is <code>false</code></p>

	true이면 클래스 패스상에 존재하지 않는 파일들이 오히려 파일 확장명 being.jar에 
	의존하는 이상의 JAR 파일이 있는지 확인합니다.
    
	기본값은 false입니다.
      </attribute>

      <attribute name="scanAllDirectories" required="false">
       <p>If true, any directories found on the classpath will be checked to see
       if are expanded Jar files. The default is <code>false</code>. Tomcat
       determines if directory is an expanded JAR file by looking for a META-INF
       sub-directory. Only if the META-INF sub-directory exists, is the
       directory to be an expanded JAR file.</p>

	   true이면 클래스 패스상에 존재하지 않는 디렉토리는 jar 파일을 확장하고 있는지 확인합니다.
       
	   기본값은 false입니다.
       
	   디렉토리 META-INF 하위 디렉토리를 찾고 의해 확장된 JAR 파일 경우 Tomcat은이 결정합니다.
       META-INF의 서브 디렉토리가 존재하는 경우에만, 확장된 JAR 파일이 될 디렉토리입니다.
      </attribute>

    </attributes>

  </subsection>


</section>


<section name="Nested Components">
  <p>No components may be nested inside a <strong>Jar Scanner</strong> element.
  어떤 구성 요소 자자 스캐너 요소 안에 중첩 수 없습니다. 	

  </p>
</section>


<section name="Special Features">
  <p>No special features are associated with a <strong>Jar Scanner</strong>
  element.</p>

 특별한 기능은 자자 스캐너 요소와 연관되지 않습니다.	


</section>

</body>

</document>
