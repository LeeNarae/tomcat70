<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document [
  <!ENTITY project SYSTEM "project.xml">
]>
<document url="setup.html">

  &project;

  <properties>
    <author email="remm@apache.org">레미 모체랏</author>
    <title>톰캣 설치</title>
  </properties>

<body>

<section name="차례">
<toc/>
</section>

  <section name="소개">
    <p>
      이 문서는 다른 플랫폼에서 Tomcat을 실행하기 위해 설정하는 몇 가지 방법을 소개합니다.
	  일부 고급 설정 문제는 여기에 포함되지 않으므로 주의 : 전체 배포(ZIP 파일 또는 타볼 (tarball))에는 이러한 문제에 대해 설명하는
	  RUNNING.txt라는 파일이 포함되어 있습니다. 우리는 아래의 정보가 귀하의 질문에 어떤 대답도 되지 않는다면 당신이 그것을 참조하기를 바랍니다.
    </p>
  </section>

  <section name="Windows">

    <p>
      윈도우에서 톰캣 설치는 윈도우 인스톨러(Windows installer)를 사용하여 쉽게 수행할 수 있습니다. 
	  그것의 인터페이스와 기능은 관심있는 몇 항목으로 다른 마법사 기반 설치와 비슷합니다.
    </p>

    <p>
      <ul>
        <li><strong>서비스 설치</strong>: 
		    톰캣은 선택되는 설정에 상관없이 Windows 서비스로 설치될 것입니다.
            구성 요소 페이지에서 확인란을 사용하면 Windows를 시작할 때 톰캣이 자동으로 시작되도록, "자동"시작으로 서비스를 설정합니다.
			최적의 보안을 위해 서비스 축소 권한 (Windows 서비스 관리 도구 및 설명서를 참조)과 함께 별도의 사용자로 실행해야합니다.
		</li>
        <li><strong>자바 위치</strong>: 인스톨러(installer)가 서비스를 실행하는 데 사용하는 기본 JRE를 제공할 것입니다. 
			인스톨러(installer)는 전체 JDK의 일부로 설치된 JRE를 포함한 자바 6 이상 JRE의 기본 경로를 결정하기 위해 레지스트리를 사용합니다.
			64 비트 운영 체제에서 실행하면 인스톨러(installer)는 먼저 64 비트 JRE를 찾고 64 비트 JRE가 발견되지 않은 경우에만 32 비트 JRE를 찾습니다. 
			이것은 인스톨러(installer)에 의해 감지된 기본 JRE를 사용해야만 한다는 것은 아닙니다. 설치된 자바 6 이상 JRE (32 비트 또는 64 비트)를 사용할 수 있습니다.
		</li>
        <li><strong>Tray icon</strong>: 톰캣을 서비스로 실행할 때, 톰캣이 실행되면 현재 어떤 트레이 아이콘이 없을 것입니다. 
			톰캣이 서비스로 설치되어 있는 경우 설치 종료 시에 톰캣을 실행하도록 선택하면 트레이 아이콘도 사용됩니다.</li>
        <li>윈도우 서비스로서 톰캣을 관리하는 방법에 대한 자세한 내용은 <a href="windows-service-howto.html">윈도우 서비스를 참조하는 방법</a>를 참조하십시오.</li>            
      </ul>
    </p>

    <p>인스톨러(installer)는 Tomcat을 시작 및 구성을 할 수 있도록 바로 가기를 만듭니다. 
	    그것은 톰캣이 실행되면 톰캣 관리 웹 응용 프로그램에서만 사용할 수 있다는 것이 중요합니다.
	</p>

  </section>

  <section name="Unix daemon">

    <p>톰캣은 커먼즈-데몬 프로젝트에서 jsvc 도구를 사용하여 데몬으로 실행할 수 있습니다. 
	   jsvc의 소스 tarballs는 톰캣 바이너리와 함께 제공하며 컴파일해야 합니다. 
	   빌딩 jsvc는 C ANSI 컴파일러 (예 : GCC 등), GNU의 Autoconf, 그리고 JDK가 필요합니다.
	</p>

    <p>스크립트를 실행하기 전에 <code> JAVA_HOME </code>이 환경 변수가 JDK의 기본 경로로서 설정되어야합니다.
	   반면, <code>./configure</code> 스크립트를 호출했을 때, JDK의 경로가 <code>./configure --with-java=/usr/java</code>와 같은 
	   <code>--with-java</code> 매개 변수를 사용하여 지정할 수 있습니다
	</p>

    <p>다음 명령을 사용하면 <code>$CATALINA_HOME/bin</code> 폴더에 컴파일된 jsvc 바이너리가 생겨난다.
	   이 사용되고 있는 GNU TAR와 <code>CATALINA_HOME</code>는 톰캣 설치의 기본 경로를 가리키는 환경 변수입니다.
	</p>

    <p>FreeBSD 시스템의 기본 BSD make 대신 GNU make(gmake)를 사용해야 합니다.</p>

<source>
    cd $CATALINA_HOME/bin
    tar xvfz commons-daemon-native.tar.gz
    cd commons-daemon-1.0.x-native-src/unix
    ./configure
    make
    cp jsvc ../..
    cd ../..
</source>

    <p>톰캣은 다음 명령을 사용하여 데몬으로 실행할 수 있습니다.</p>

<source>
    cd $CATALINA_HOME
    ./bin/jsvc -cp ./bin/bootstrap.jar:./bin/tomcat-juli.jar \
        -outfile ./logs/catalina.out -errfile ./logs/catalina.err \
        org.apache.catalina.startup.Bootstrap
</source>

    <p>당신은 또한 JVM의 기본값들을 서버 VM이 아닌 클라이언트 VM을 사용하는 경우 BB를 지정해야 할 수도 있습니다. 이것은 OSX에서 감시합니다.</p>

    <p>jsvc는 데몬 초기화가 완료된 후 그것이 다른 사용자로 전환하는 원인이 같은 <code>-user</code>와 같은 다른 유용한 매개 변수를 갖습니다.
	   예를 들어,이것은 여전히 특권 포트를 사용할 수있는 상태가 아닌 특권 사용자로서 Tomcat을 실행하실 수 있습니다. 
	   이 옵션을 사용하여 루트로서 Tomcat을 시작하면, 당신이 루트로서 실행할 때 시작하는 Tomcat을 방지할 수 있도록 
	   <code>org.apache.catalina.security.SecurityListener</code> 체크를 해제해야합니다.</p>

    <p><code>jsvc --help</code>는 전체 jsvc 사용 정보를 반환합니다. 
		특히, <code>-debug</code> 옵션은 jsvc를 실행하는 문제를 디버깅하는 데 유용합니다.</p>

    <p>파일은 <code>$CATALINA_HOME/bin/commons-daemon-1.0.x-native-src/unix/native/Tomcat5.sh</code>가 
	   <code>/etc/init.d</code>에서 부팅할 때 자동으로 Tomcat을 시작하기 위한 템플릿으로 사용할 수 있습니다.
	   파일은 현재 톰캣 5.5.x 실행하기 위한 설정이며, 그것은 약간의 편집이 필요합니다.</p>

    <p>커먼즈-데몬 JAR 파일이 이러한 방식으로 Tomcat을 실행하기 위해서는 클래스 경로에 런타임이 있어야합니다.  
	   커먼즈-데몬 JAR 파일은 bootstrap.jar 매니 페스트의 클래스 경로 항목에 있지만 
	   커먼즈-데몬 클래스에 대한 ClassNotFoundException 또는 NoClassDefFoundError를 얻을 경우,
	   jsvc을 출시할 때 -CP 요소로 커먼즈-데몬 JAR를 추가합니다.
	</p>

  </section>

</body>
</document>
