<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document [
  <!ENTITY project SYSTEM "project.xml">
]>
<document url="overview.html">

  &project;

  <properties>
    <author email="yoavs@apache.org">Yoav Shapira</author>
    <title>Architecture Overview</title>
  </properties>

<body>


<section name="Overview">
<p>
This page provides an overview of the Tomcat server architecture.
이 페이지는 Tomcat 서버 아키텍처의 개요를 제공합니다.
</p>
</section>

<section name="Terms">

<subsection name="Server">
<p>
In the Tomcat world, a
<a href="../config/server.html">Server</a> represents the whole container.
Tomcat provides a default implementation of the
<a href="../api/org/apache/catalina/Server.html">Server interface</a>
which is rarely customized by users.
</p>
<p>
Tomcat은 세계에서
<a href="../config/server.html">서버</a>는 전체 컨테이너를 나타냅니다.
Tomcat은 거의 사용자가 정의하지 않고 <a href="../api/org/apache/catalina/Server.html">서버 인터페이스</a>
의 기본 구현을 제공합니다.
</p>
</subsection>

<subsection name="Service">
<p>
A <a href="../config/service.html">Service</a> is an intermediate component
which lives inside a Server and ties one or more Connectors to exactly one
Engine.  The Service element is rarely customized by users, as the default
implementation is simple and sufficient:
<a href="../api/org/apache/catalina/Service.html">Service interface</a>.
</p>
<a href="../config/service.html">서비스</a>는 서버와 정확히 하나의 엔진에 연줄이 하나 이상의 커넥터 안에 사는 중간 구성 요소입니다
<a href="../api/org/apache/catalina/Service.html">서비스 인터페이스</a> : 
기본 구현이 간단하고 충분로서 서비스 요소는 거의, 사용자에 의해 정의되지 않습니다.
</p>
</subsection>

<subsection name="Engine">
<p>
An
<a href="../config/engine.html">Engine</a> represents request processing
pipeline for a specific Service.  As a Service may have multiple Connectors,
the Engine received and processes all requests from these connectors, handing
the response back to the appropriate connector for transmission to the client.
The <a href="../api/org/apache/catalina/Engine.html">Engine interface</a>
may be implemented to supply custom Engines, though this is uncommon.
</p>
<p>
Note that the Engine may be used for Tomcat server clustering via the
jvmRoute parameter.  Read the Clustering documentation for more information.
</p>
<p>
<a href="../config/engine.html"> 엔진 </a> 은 특정 서비스에 대한 요청 처리 파이프라인을 나타냅니다.
서비스는 여러 개의 커넥터가 있을 수록, 엔진이 커넥터에서 모든 요청을 받고 처리하고,
클라이언트에 전송에 적합한 커넥터에 다시 응답을 건네준다.
<a href="../api/org/apache/catalina/Engine.html">엔진 인터페이스</a>는 특이하지만, 
사용자 정의 엔진을 제공하기 위해 구현할 수 있습니다.
</p>

<p>
Note that the Engine may be used for Tomcat server clustering via the
jvmRoute parameter.  Read the Clustering documentation for more information.
엔진은 jvmRoute 매개 변수를 통해 Tomcat 서버 클러스터링에 사용할 수 있습니다.
자세한 내용은 클러스터링 설명서를 읽어 보시기 바랍니다.
</p>
</subsection>

<subsection name="Host">
<p>
A <a href="../config/host.html">Host</a> is an association of a network name,
e.g. www.yourcompany.com, to the Tomcat server.  An Engine may contain
multiple hosts, and the Host element also supports network aliases such as
yourcompany.com and abc.yourcompany.com.  Users rarely create custom
<a href="../api/org/apache/catalina/Host.html">Hosts</a>
because the
<a href="../api/org/apache/catalina/core/StandardHost.html">StandardHost
implementation</a> provides significant additional functionality.
</p>

<p>
<a href="../config/host.html">호스트</a> 예 : 네트워크 이름의 협회입니다. Tomcat 서버에 www.yourcompany.com이 있다.
엔진은 여러 호스트를 포함할 수 있으며, 호스트 요소는 또한 yourcompany.com
및 abc.yourcompany.com 같은 네트워크 별칭을 지원합니다.
<a href="../api/org/apache/catalina/core/StandardHost.html">StandardHost 구현</a>은 
상당한 추가 기능을 제공하기 때문에 사용자는 거의 사용자 지정 <a href="../api/org/apache/catalina/Host.html">호스트</a>를 만들 수 없습니다.
</p>
</subsection>

<subsection name="Connector">
<p>
A Connector handles communications with the client.  There are multiple
connectors available with Tomcat. These include the
<a href="../config/http.html">HTTP connector</a> which is used for
most HTTP traffic, especially when running Tomcat as a standalone server,
and the <a href="../config/ajp.html">AJP connector</a> which implements
the AJP procotol used when connecting Tomcat to a web server such as
Apache HTTPD server. Creating a customized connector is a significant
effort.
</p>

<p>
커넥터는 클라이언트와 통신을 처리합니다. 톰캣에서 사용하는 여러 개의 커넥터가 있습니다.
이들은 독립 실행형 서버로 Tomcat을 실행하고 특히, 대부분의 HTTP 트래픽에 사용되는 
<a href="../config/http.html">HTTP 커넥터</a> 와 같은 아파치 아파치 서버로 웹 서버에
Tomcat을 연결할 때 사용하는 <a href="../config/ajp.html">AJP connector</a>을 구현 AJP 커넥터를 포함합니다.
</p>
</subsection>

<subsection name="Context">
<p>
A
<a href="../config/context.html">Context</a>
represents a web application.  A Host may contain multiple
contexts, each with a unique path.  The
<a href="../api/org/apache/catalina/Context.html">Context
interface</a> may be implemented to create custom Contexts, but
this is rarely the case because the
<a href="../api/org/apache/catalina/core/StandardContext.html">
StandardContext</a> provides significant additional functionality.
</p>

<p>
<a href="../config/context.html">Context</a>는 웹 응용 프로그램을 나타냅니다.
호스트는 여러 상황, 독특한 경로와 각 포함될 수 있습니다.
<a href="../api/org/apache/catalina/Context.html">Context
interface</a> 는 사용자 지정 컨텍스트를 만드는 구현하지만,
<a href="../api/org/apache/catalina/core/StandardContext.html">
StandardContext</a>는 상당한 추가 기능을 제공하기 때문에  거의  구현하지 않습니다.
</p>
</subsection>
</section>

<section name="Comments">
<p>
Tomcat is designed to be a fast and efficient implementation of the
Servlet Specification.  Tomcat came about as the reference implementation
of this specification, and has remained rigorous in adhering to the
specification.  At the same time, significant attention has been paid
to Tomcat's performance and it is now on par with other servlet containers,
including commercial ones.
톰캣은 서블릿 스펙의 신속하고 효율적인 구현이 될 수 있도록 설계되었습니다.
Tomcat은 이 사양의 레퍼런스 구현 등에 대해 규격 준수에 엄격하게 남아있다.
동시에, 상당한 성능을 톰캣으로로 돈 그것은 상업적인 것들을 포함한 
다른 서블릿 컨테이너와 평가한다.
</p>
<p>
In recent releases of Tomcat, mostly starting with Tomcat 5,
we have begun efforts to make more aspects of Tomcat manageable via
JMX.  In addition, the Manager and Admin webapps have been greatly
enhanced and improved.  Manageability is a primary area of concern
for us as the product matures and the specification becomes more
stable.
톰캣의 최근 릴리스에서는 대부분 톰캣 5 시작한다.
우리는 톰캣보다 측면 JMX를 통해 관리를 만들기 위해 노력을 시작했습니다.
또한, 관리자와 관리 webapps는 크게 향상 및 개선되었습니다.
관리는 우리를 걱정하는 주요 분야이며 사양은 보다 안정된다.
</p>
</section>

</body>
</document>